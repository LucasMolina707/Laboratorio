name: Generate Navigation JSON

on:
  push:
    branches:
      - main # O la rama principal que uses, ej: master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necesario para obtener el historial completo y las fechas

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Generate Navigation File
        run: |
          # --- PREPARACIÓN ---
          PAGES_JSON_ARRAY=()
          PROJECTS_JSON_ARRAY=()

          # --- GENERAR SECCIÓN DE PÁGINAS ---
          while IFS= read -r -d '' file; do
              title=$(grep -o "<title>.*</title>" "$file" | sed -e "s/<title>//" -e "s/<\/title>//" | sed -e "s/·.*//" | tr -s ' ' | xargs)
              date=$(git log -1 --format=%cI -- "$file")
              page_json=$(jq -n --arg href "/$(basename "$file")" --arg label "$title" --arg date "$date" '{href: $href, label: $label, date: $date}')
              PAGES_JSON_ARRAY+=("$page_json")
          done < <(find . -maxdepth 1 -type f -name "*.html" ! -name "_*" -print0)

          # --- GENERAR SECCIÓN DE PROYECTOS ---
          while IFS= read -r -d '' file; do
              title=$(grep -o "<title>.*</title>" "$file" | sed -e "s/<title>//" -e "s/<\/title>//" | sed -e "s/·.*//" | tr -s ' ' | xargs)
              date=$(git log -1 --format=%cI -- "$file")
              project_json=$(jq -n --arg href "/$(echo "$file" | sed "s|./||")" --arg label "$title" --arg date "$date" '{href: $href, label: $label, date: $date}')
              PROJECTS_JSON_ARRAY+=("$project_json")
          done < <(find ./proyectos -type f -name "*.html" ! -name "_*" -print0)

          # --- CONSTRUIR EL JSON FINAL ---
          sorted_pages=$(printf "%s\n" "${PAGES_JSON_ARRAY[@]}" | jq -s 'sort_by(.date) | reverse')
          sorted_projects=$(printf "%s\n" "${PROJECTS_JSON_ARRAY[@]}" | jq -s 'sort_by(.date) | reverse')

          jq -n --argjson pages "$sorted_pages" --argjson projects "$sorted_projects" '{pages: $pages, projects: $projects}' > nav.json

          echo "nav.json generado con éxito:"
          cat nav.json

      - name: Commit and push if changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add nav.json
          if ! git diff --staged --quiet; then
            git commit -m "Automated: Update nav.json"
            git push
          else
            echo "No changes to nav.json. Nothing to commit."
          fi
